[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://be70gy3d3eaqo"]

[sub_resource type="VisualShaderNodeVectorOp" id="1"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 2

[sub_resource type="VisualShaderNodeIf" id="10"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeFloatParameter" id="11"]
parameter_name = "use_lightmap"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_g73uh"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ptf0r"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yy7fn"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m8lov"]
input_name = "uv2"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="2"]
output_port_for_preview = 0
parameter_name = "main_texture"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="5"]
output_port_for_preview = 0
parameter_name = "lm_texture"

[sub_resource type="VisualShaderNodeVectorOp" id="6"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="7"]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="8"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="9"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]

[resource]
code = "shader_type spatial;
render_mode vertex_lighting;

uniform sampler2D main_texture;
uniform float use_lightmap;
uniform sampler2D lm_texture;



void fragment() {
// Input:15
	vec2 n_out15p0 = UV;



	vec4 n_out13p0;
// Texture2D:13
	n_out13p0 = texture(main_texture, n_out15p0);


// FloatParameter:12
	float n_out12p0 = use_lightmap;


// Input:16
	vec2 n_out16p0 = UV2;



	vec4 n_out14p0;
// Texture2D:14
	n_out14p0 = texture(lm_texture, n_out16p0);


// VectorOp:8
	vec3 n_in8p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out8p0 = vec3(n_out14p0.xyz) * n_in8p1;


// Input:7
	vec4 n_out7p0 = COLOR;


// VectorOp:9
	vec3 n_in9p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out9p0 = vec3(n_out7p0.xyz) + n_in9p1;


// VectorOp:10
	vec3 n_out10p0 = n_out8p0 * n_out9p0;


	vec3 n_out11p0;
// If:11
	float n_in11p1 = 1.00000;
	float n_in11p2 = 0.00001;
	if(abs(n_out12p0 - n_in11p1) < n_in11p2)
	{
		n_out11p0 = n_out10p0;
	}
	else if(n_out12p0 < n_in11p1)
	{
		n_out11p0 = vec3(n_out7p0.xyz);
	}
	else
	{
		n_out11p0 = vec3(n_out7p0.xyz);
	}


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out13p0.xyz) * n_out11p0;


// Output:0
	ALBEDO = n_out6p0;


}
"
graph_offset = Vector2(-954.124, -199.596)
flags/vertex_lighting = true
nodes/fragment/0/position = Vector2(340, 120)
nodes/fragment/2/node = SubResource("2")
nodes/fragment/2/position = Vector2(-680, 40)
nodes/fragment/5/node = SubResource("5")
nodes/fragment/5/position = Vector2(-1440, 520)
nodes/fragment/6/node = SubResource("6")
nodes/fragment/6/position = Vector2(120, 120)
nodes/fragment/7/node = SubResource("7")
nodes/fragment/7/position = Vector2(-1020, 880)
nodes/fragment/8/node = SubResource("8")
nodes/fragment/8/position = Vector2(-600, 360)
nodes/fragment/9/node = SubResource("9")
nodes/fragment/9/position = Vector2(-600, 540)
nodes/fragment/10/node = SubResource("1")
nodes/fragment/10/position = Vector2(-360, 400)
nodes/fragment/11/node = SubResource("10")
nodes/fragment/11/position = Vector2(-160, 860)
nodes/fragment/12/node = SubResource("11")
nodes/fragment/12/position = Vector2(-520, 700)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture_g73uh")
nodes/fragment/13/position = Vector2(-280, 0)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_ptf0r")
nodes/fragment/14/position = Vector2(-984.8, 321.8)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_yy7fn")
nodes/fragment/15/position = Vector2(-680, -100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_m8lov")
nodes/fragment/16/position = Vector2(-1480, 280)
nodes/fragment/connections = PackedInt32Array(6, 0, 0, 0, 7, 0, 9, 0, 9, 0, 10, 1, 8, 0, 10, 0, 10, 0, 11, 3, 11, 0, 6, 1, 7, 0, 11, 5, 7, 0, 11, 4, 12, 0, 11, 0, 2, 0, 13, 2, 13, 0, 6, 0, 5, 0, 14, 2, 14, 0, 8, 0, 15, 0, 13, 0, 16, 0, 14, 0)
